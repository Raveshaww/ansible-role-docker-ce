---
# tasks file for docker-ce
- name: Load OS specific variables
  ansible.builtin.include_vars:
    file: "{{ ansible_distribution_file_variety }}.yml"

- name: Update APT cache if Ubuntu / Debian
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: "3600"
  when: ansible_distribution_file_variety == "Debian"

- name: Install pre-req software
  ansible.builtin.package:
    name: "{{ item.name }}"
    state: latest
  loop: "{{ prereq_software }}"

- name: Download GPG keys for Docker for Ubuntu / Debian
  ansible.builtin.get_url:
    url: "{{ key_url }}"
    dest: "{{ key_dest }}"
    mode: "0644"
  when: ansible_distribution_file_variety == "Debian"

- name: Add repo for Ubuntu / Debian
  ansible.builtin.apt_repository:
    repo: "{{ repo }}"
    state: present
  when: ansible_distribution_file_variety == "Debian"

- name: Add repo for RedHat
  ansible.builtin.template:
    src: templates/docker-ce.j2
    dest: /etc/yum.repos.d/docker-ce.repo
    mode: '0644'
  when: ansible_distribution_file_variety == "RedHat"

- name: Update APT cache if Ubuntu / Debian
  ansible.builtin.apt:
    update_cache: true
  when: ansible_distribution_file_variety == "Debian"

- name: Install Docker
  ansible.builtin.package:
    name: "{{ item.name }}"
    state: latest
  loop: "{{ docker_software }}"

- name: Ensure that the Docker and Containerd services start on boot
  ansible.builtin.service:
    name: "{{ item.name }}"
    state: started
    enabled: true
  loop: "{{ services }}"

- name: Check if services are running
  ansible.builtin.service_facts:
  register: service_state

- name: Check if packages were installed
  ansible.builtin.package_facts:
  register: package_state

- name: Evaluating checks
  ansible.builtin.assert:
    that:
      - service_state.ansible_facts.services["containerd.service"].state == "running"
      - service_state.ansible_facts.services["docker.service"].state == "running"
      - package_state.ansible_facts.packages["docker-ce"] is defined
      - package_state.ansible_facts.packages["docker-ce-cli"] is defined
      - package_state.ansible_facts.packages["docker-buildx-plugin"] is defined
      - package_state.ansible_facts.packages["docker-compose-plugin"] is defined
    success_msg: "All checks passed"
